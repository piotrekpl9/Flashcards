@model Flashcards.DTOs.DeckSessionDto

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Sesja</h2>

<div class="text-center">
    <p>Kliknij w fiszkę by poznać odpowiedź</p>
</div>
<div class="cardbox">
    <span class="question">@Model.NextFlashcardQueue?.Flashcard?.Front</span>
    <span class="answer" style="display:none;">@Model.NextFlashcardQueue?.Flashcard?.Back</span>
</div>

@if (Model.NextFlashcardQueue != null)
{
    <div class="form-row" style="display: flex; gap: 5px; justify-content: center; margin-top: 1rem;">
        <form asp-action="Update" asp-controller="DeckSession" asp-route-deckSessionId="@Model.Id" method="post">
            <input type="hidden" name="Quality" value="1" />
            <input type="hidden" name="FlashcardsQueueId" value="@Model.NextFlashcardQueue.Id" />
            <button type="submit" class="btn btn-danger">Jeszcze raz</button>
        </form>
        <form asp-action="Update" asp-controller="DeckSession" asp-route-deckSessionId="@Model.Id" method="post">
            <input type="hidden" name="Quality" value="2" />
            <input type="hidden" name="FlashcardsQueueId" value="@Model.NextFlashcardQueue.Id" />
            <button type="submit" class="btn btn-warning">Trudne</button>
        </form>
        <form asp-action="Update" asp-controller="DeckSession" asp-route-deckSessionId="@Model.Id" method="post">
            <input type="hidden" name="Quality" value="3" />
            <input type="hidden" name="FlashcardsQueueId" value="@Model.NextFlashcardQueue.Id" />
            <button type="submit" class="btn btn-secondary">Ok</button>
        </form>
        <form asp-action="Update" asp-controller="DeckSession" asp-route-deckSessionId="@Model.Id" method="post">
            <input type="hidden" name="Quality" value="4" />
            <input type="hidden" name="FlashcardsQueueId" value="@Model.NextFlashcardQueue.Id" />
            <button type="submit" class="btn btn-primary">Łatwe</button>
        </form>
        <form asp-action="Update" asp-controller="DeckSession" asp-route-deckSessionId="@Model.Id" method="post">
            <input type="hidden" name="Quality" value="5" />
            <input type="hidden" name="FlashcardsQueueId" value="@Model.NextFlashcardQueue.Id" />
            <button type="submit" class="btn btn-success">Bardzo łatwe</button>
        </form>
    </div>
}

<ul>
    <li>Pozostało: @(Model.SessionLimit - Model.SessionLength)</li>
    <li>Powtórzenia: @Model.NextFlashcardQueue?.Repetitions</li>
    <li>Ease Factor: @Model.NextFlashcardQueue?.EaseFactor</li>
</ul>

<a href="/Deck" class="btn btn-danger">Przerwij grę</a>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const cardbox = document.querySelector('.cardbox');
        const question = document.querySelector('.cardbox .question');
        const answer = document.querySelector('.cardbox .answer');
        if (cardbox && question && answer) {
            cardbox.addEventListener('click', function() {
                if (question.style.display === 'none') {
                    question.style.display = '';
                    answer.style.display = 'none';
                    cardbox.classList.remove('cardbox-answer');
                } else {
                    question.style.display = 'none';
                    answer.style.display = '';
                    cardbox.classList.add('cardbox-answer');
                }
            });
        }
    });
</script>
