@model Flashcards.DTOs.DeckSessionDto

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Deck Session</h2>

<div>
    <ul>
        <li>Length: @Model.SessionLength</li>
        <li>Limit: @Model.SessionLimit</li>
        <li>@Model.FlashcardQueues.Count()</li>
        <li><strong>Front:</strong> @Model.NextFlashcardQueue?.Flashcard?.Front</li>
        <li><strong>Back:</strong> @Model.NextFlashcardQueue?.Flashcard?.Back</li>
        
        
    </ul>
</div>

@if (Model.NextFlashcardQueue != null)
{
    <form asp-action="Update" asp-controller="DeckSession" asp-route-deckSessionId="@Model.Id" method="post" onsubmit="event.preventDefault(); submitAnswer();">
        <input type="hidden" name="Quality" value="1" />
        <input type="hidden" name="FlashcardsQueueId" value="@Model.NextFlashcardQueue.Id" />
        <button type="submit">Answer Quality 1</button>
    </form>
}

@section Scripts {
    <script>
        function submitAnswer() {
            const form = event.target;
            const data = {
                quality: 1,
                flashcardsQueueId: form.querySelector('[name="FlashcardsQueueId"]').value
            };
            fetch(`@Url.Action("Update", "DeckSession", new { deckSessionId = Model.Id })`, {
                method: "PATCH",
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]')?.value
                },
                body: JSON.stringify(data)
            }).then(response => {
                if (response.redirected) {
                    window.location.href = response.url;
                } else {
                    window.location.reload();
                }
            });
        }
    </script>
}